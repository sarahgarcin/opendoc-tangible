{
  "name": "video-recorder",
  "version": "0.0.1",
  "description": "Experimental browser module for recording the contents of a <video> tag.",
  "main": "./video-recorder.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/HenrikJoreteg/video-recorder"
  },
  "keywords": [
    "browser",
    "getUserMedia",
    "WebRTC"
  ],
  "author": {
    "name": "Henrik Joreteg",
    "email": "henrik@andyet.net"
  },
  "license": "MIT",
  "dependencies": {
    "photograb": "0.0.1"
  },
  "devDependencies": {
    "browserify": "2.x",
    "fauxplay": "0.0.1",
    "getusermedia": "0.2.1",
    "attachmediastream": "1.0.1"
  },
  "readme": "# video-recorder\n\nExperimental browser module for recording contents of a `<video>` tag by taking dataURI snapshots of it.\n\nWritten as a CommonJS module, so it works out of the box with browserify. If using with AMD or as standalone use `video-recorder.bundle.js` file instead.\n\nTested primarily in Chrome.\n\n## demo\n\nSee the demo here: http://projects.joreteg.com/video-recorder/\n\n## why?\n\nYou can use it to record and play back video at approximately 10fps in chrome. I was largely curious how well it would work. Turns out it's not too shabby.\n\nThe data is stored in an array as Base64 encoded PNGs using dataURIs: https://developer.mozilla.org/en-US/docs/data_URIs. This could be uploaded to a server and stitched into a video file using something like ffmpeg.\n\nBut it can also just be played back to the user using: https://github.com/HenrikJoreteg/fauxplay (as seen in the demo).\n\nObviously, there's no sound being recorded, but it could be interesting to mix this with screen capture support for in-browser screencast recordings.\n\n## installing\n\n```\nnpm install video-recorder\n```\n\n## example\n\n```html\n<video id=\"video\"></video>\n<img id=\"demo\">\n<div>\n  <button id=\"record\">Record</button>\n  <button id=\"play\">Play</button>\n  <button id=\"reset\">Reset recording</button>\n</div>\n\n<!-- some packages for getting and attaching user media -->\n<script src=\"node_modules/getusermedia/getusermedia.bundle.js\"></script>\n<script src=\"node_modules/attachmediastream/attachmediastream.bundle.js\"></script>\n<!-- a package for playing back the recording -->\n<script src=\"node_modules/fauxplay/fauxplay.bundle.js\"></script>\n\n<script src=\"video-recorder.bundle.js\"></script>\n<script>\n  var image = document.getElementById('demo');\n  var video = document.getElementById('video');\n  var record = document.getElementById('record');\n  var play = document.getElementById('play');\n  var reset = document.getElementById('reset');\n  var recorder;\n\n  getUserMedia(function (err, stream) {\n    if (err) return console.log(err);\n\n    attachMediaStream(stream, video, {muted: true});\n\n    recorder = window.recorder = new VideoRecorder(video);\n  });\n\n  record.addEventListener('click', function () {\n    if (recorder.running) {\n      recorder.stop();\n      this.innerHTML = 'Record';\n    } else {\n      recorder.record();\n      this.innerHTML = 'Pause';\n    }\n  });\n\n  play.addEventListener('click', function () {\n    fauxplay(recorder.data, image, {loop: true, duration: recorder.runningTime})\n  });\n\n  reset.addEventListener('click', function () {\n    recorder.stop();\n    recorder.reset();\n  });\n</script>\n```\n\n## license\n\nMIT\n\n## credits\n\nIf you like this follow [@HenrikJoreteg](http://twitter.com/henrikjoreteg) on twitter <3. This is a small part of my larger, grander project efforts related to webrtc: http://simplewebrtc.com\n",
  "_id": "video-recorder@0.0.1",
  "dist": {
    "shasum": "25deaeaff8940d31a2e09cbb0006d4e00ffc65c4",
    "tarball": "http://registry.npmjs.org/video-recorder/-/video-recorder-0.0.1.tgz"
  },
  "_npmVersion": "1.1.62",
  "_npmUser": {
    "name": "henrikjoreteg",
    "email": "henrik@andyet.net"
  },
  "maintainers": [
    {
      "name": "henrikjoreteg",
      "email": "henrik@andyet.net"
    }
  ],
  "directories": {},
  "_shasum": "25deaeaff8940d31a2e09cbb0006d4e00ffc65c4",
  "_from": "video-recorder@",
  "_resolved": "https://registry.npmjs.org/video-recorder/-/video-recorder-0.0.1.tgz"
}
